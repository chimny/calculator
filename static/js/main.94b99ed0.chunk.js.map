{"version":3,"sources":["data/theme.js","utils/calculateValue.js","redux/slices/calculationSlice.js","styles/StyledNumButton.jsx","components/calculator elements/buttons/NumberButton.jsx","styles/StyledClearButton.jsx","components/calculator elements/buttons/DEL.jsx","redux/slices/themeSlice.js","redux/store.js","utils/updateInput.js","styles/StyledCalculationButton.jsx","components/calculator elements/buttons/CalculationButton.jsx","components/calculator elements/buttons/Reset.jsx","styles/StyledKeyboard.jsx","components/calculator elements/Keyboard.jsx","styles/StyledCalculator.jsx","styles/StyledCalcWindow.jsx","components/calculator elements/CalcWindow.jsx","styles/StyledCalcHeader.jsx","styles/StyledSwitchToggle.jsx","components/calculator elements/SwitchToggle.jsx","components/calculator elements/CalcHeader.jsx","components/Calculator.jsx","styles/Wrapper.jsx","styles/GlobalStyle.jsx","App.js","reportWebVitals.js","index.js","data/symbols.js"],"names":["module","exports","firstTheme","themeName","mobileWidth","desktopWidth","headerFontColor","mainBackground","windowBackground","keyboardBackground","numButtonBackground","numButtonShadow","fontColor","resultFontColor","equalButtonBackground","equalButtonFontColor","equalButtonShadow","clearButtonFontColor","clearButtonBackground","clearButtonShadow","secondTheme","keyBackground","thirdTheme","calculateValue","firstValue","symbol","secondValue","bigFirstValue","Big","bigSecondValue","Number","plus","minus","times","div","eligibleSymbols","require","OPERATION_SYMBOLS","map","el","mathAction","initialState","firstNumber","operator","secondNumber","result","input","calculationSlice","createSlice","name","reducers","addOperator","state","action","includes","payload","calculation","calculateResult","resetOperation","addDot","prevState","removeNumber","slice","length","addNumber","addedNumber","String","actions","inputValueAssignment","StyledNumButton","styled","button","theme","area","NumberButton","props","dispatch","useDispatch","onClick","number","StyledClearButton","DEL","localData","JSON","parse","localStorage","getItem","themeSlice","setTheme","store","configureStore","reducer","calculator","calculationReducer","themeReducer","updateInput","currentInput","localSymbol","StyledCalculationButton","CalculationButton","useSelector","Reset","StyledKeyboard","Keyboard","NUMBERS","num","gridArea","StyledCalculator","StyledCalcWindow","CalcWindow","activeInputView","equalSignVisible","StyledCalcHeader","StyledSwitchToggle","SwitchToggle","setThemeFunction","activeStatus","className","htmlFor","id","type","checked","onChange","CalcHeader","Calculator","Wrapper","GlobalStyle","createGlobalStyle","App","handleKeyDown","e","numberSymbols","operationSymbols","key","useEffect","window","addEventListener","removeEventListener","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94b99ed0.chunk.js","sourcesContent":["const firstTheme = {\r\n    //containers\r\n    themeName: 'firstTheme',\r\n    mobileWidth: '375px',\r\n    desktopWidth: '1440px',\r\n\r\n    headerFontColor: 'hsl(0, 0%, 100%)',\r\n    mainBackground: 'hsl(222, 26%, 31%)',\r\n    windowBackground: 'hsl(224, 36%, 15%)',\r\n    keyboardBackground: 'hsl(223, 31%, 20%)',\r\n    numButtonBackground: 'hsl(30, 25%, 89%)',\r\n    numButtonShadow: 'hsl(224, 28%, 35%)',\r\n    fontColor: 'hsl(221, 14%, 31%)',\r\n    resultFontColor: 'hsl(0,0%,100%)',\r\n    equalButtonBackground: 'hsl(6, 63%, 50%)',\r\n    equalButtonFontColor: 'hsl(0,0%,100%)',\r\n    equalButtonShadow: 'hsl(6, 70%, 34%)',\r\n\r\n\r\n    clearButtonFontColor: 'hsl(0, 0%, 100%)',\r\n    clearButtonBackground: 'hsl(225, 21%, 49%)',\r\n    clearButtonShadow: 'hsl(224, 28%, 35%)',\r\n\r\n\r\n}\r\n\r\nconst secondTheme = {\r\n    //containers\r\n    themeName: 'secondTheme',\r\n    mobileWidth: '375px',\r\n    desktopWidth: '1440px',\r\n\r\n    headerFontColor: 'hsl(60, 10%, 19%)',\r\n    mainBackground: 'hsl(30, 25%, 89%)',\r\n    windowBackground: 'hsl(0, 0%, 93%)',\r\n    keyboardBackground: 'hsl(0, 5%, 81%)',\r\n    keyBackground: 'hsl(30, 25%, 89%)',\r\n    numButtonShadow: 'hsl(185, 58%, 25%)',\r\n    numButtonBackground: 'hsl(30, 25%, 89%)',\r\n    fontColor: 'hsl(60, 10%, 19%)',\r\n    resultFontColor: 'hsl(60, 10%, 19%)',\r\n    equalButtonBackground: 'hsl(25, 98%, 40%)',\r\n    equalButtonFontColor: 'hsl(0,0%,100%)',\r\n    equalButtonShadow: 'hsl(25, 99%, 27%)',\r\n\r\n    clearButtonFontColor: 'hsl(0, 0%, 100%)',\r\n    clearButtonBackground: 'hsl(185, 42%, 37%)',\r\n    clearButtonShadow: 'hsl(185, 58%, 25%)',\r\n\r\n\r\n}\r\n\r\n\r\nconst thirdTheme = {\r\n    //containers\r\n    themeName: 'thirdTheme',\r\n    mobileWidth: '375px',\r\n    desktopWidth: '1440px',\r\n\r\n    headerFontColor: 'hsl(52, 100%, 62%)',\r\n    mainBackground: 'hsl(268, 75%, 9%)',\r\n    windowBackground: 'hsl(268, 71%, 12%)',\r\n    keyboardBackground: 'hsl(268, 71%, 12%)',\r\n    keyBackground: 'hsl(281, 89%, 26%)',\r\n    numButtonShadow: 'hsl(285, 91%, 52%)',\r\n    numButtonBackground: 'hsl(281, 89%, 26%)',\r\n    fontColor: 'hsl(52, 100%, 62%)',\r\n    resultFontColor: 'hsl(52, 100%, 62%)',\r\n    equalButtonBackground: 'hsl(176, 100%, 44%)',\r\n    equalButtonFontColor: 'hsl(198, 20%, 13%)',\r\n    equalButtonShadow: 'hsl(177, 92%, 70%)',\r\n\r\n    clearButtonFontColor: 'hsl(0, 0%, 100%)',\r\n    clearButtonBackground: 'hsl(281, 89%, 26%)',\r\n    clearButtonShadow: 'hsl(285, 91%, 52%)',\r\n\r\n\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    firstTheme, secondTheme, thirdTheme\r\n};","import Big from 'big.js';\r\n\r\n\r\n\r\n\r\nexport function calculateValue(firstValue, symbol, secondValue) {\r\n\r\n    const bigFirstValue =  Big(firstValue);\r\n    const bigSecondValue = Big(secondValue);\r\n\r\n    switch (symbol) {\r\n        case \"+\":\r\n            return Number(bigFirstValue.plus(bigSecondValue));\r\n        case \"-\":\r\n            return Number(bigFirstValue.minus(bigSecondValue));\r\n        case \"*\":\r\n            return Number(bigFirstValue.times(bigSecondValue));\r\n        case \"/\":\r\n            if (secondValue === 0) return 'don\\'t divide by 0!'\r\n            return Number(bigFirstValue.div(bigSecondValue));\r\n        default:\r\n            return;\r\n    }\r\n}","import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {calculateValue} from \"../../utils/calculateValue\";\r\n\r\n//filtering symbols eligible for math operation\r\nconst {OPERATION_SYMBOLS} = require('../../data/symbols');\r\nconst eligibleSymbols = OPERATION_SYMBOLS.map(el => el.mathAction)\r\n\r\nconst initialState = {\r\n    firstNumber: null,\r\n    operator: null,\r\n    secondNumber: null,\r\n    result: null,\r\n    input: '',\r\n};\r\n\r\n\r\nexport const calculationSlice = createSlice({\r\n    name: \"calculationSlice\",\r\n    initialState,\r\n    reducers: {\r\n        addOperator(state, action) {\r\n            if (eligibleSymbols.includes(action.payload) && action.payload !== '=') {\r\n                const {firstNumber, secondNumber, result, operator, input} = state;\r\n                if (result) {\r\n                    return {...initialState, firstNumber: state.result, operator: action.payload}\r\n                }\r\n                if (!firstNumber) {\r\n                    return {...initialState, firstNumber: Number(state.input), operator: action.payload}\r\n                } else if (secondNumber === null) {\r\n                    if (input) {\r\n                        const calculation = calculateValue(firstNumber, operator, Number(input));\r\n                        return {...initialState, firstNumber: calculation, operator: action.payload}\r\n                    } else return {...initialState, firstNumber, operator: action.payload}\r\n                } else if (firstNumber || firstNumber === 0) {\r\n                    return {...initialState, secondNumber: Number(state.input), operator: action.payload}\r\n                }\r\n            }\r\n\r\n\r\n        },\r\n        calculateResult(state, action) {\r\n            const {operator, result} = state;\r\n            if (action.payload) {\r\n                state.secondNumber = Number(action.payload);\r\n            } else if (state.input) {\r\n                state.secondNumber = Number(state.input);\r\n                state.input = ''\r\n            }\r\n            if (result || result === 0) {\r\n                state.firstNumber = result;\r\n            }\r\n\r\n            state.result = calculateValue(state.firstNumber, operator, state.secondNumber)\r\n        },\r\n        resetOperation() {\r\n            return {...initialState}\r\n        },\r\n\r\n        addDot: (state) => {\r\n            const prevState = state.input\r\n\r\n            if (prevState === '') {\r\n                state.input = '0.'\r\n            } else if (prevState.includes('.')) {\r\n                return\r\n            } else {\r\n                state.input = prevState + '.'\r\n            }\r\n        },\r\n\r\n        removeNumber: (state) => {\r\n            const prevState = state.input;\r\n            state.input = prevState.slice(0, prevState.length - 1)\r\n\r\n        },\r\n\r\n\r\n        addNumber: (state, action) => {\r\n\r\n            const addedNumber = String(action.payload);\r\n\r\n            if (state.result) {\r\n                return {...initialState, input: addedNumber}\r\n            }\r\n\r\n            if (state.input === '0' && Number(addedNumber)) {\r\n                state.input = addedNumber\r\n            } else if (Number(addedNumber)) {\r\n                state.input += addedNumber\r\n            } else if (addedNumber === '0' && state.input !== '0') {\r\n                state.input += addedNumber\r\n\r\n            }\r\n            return state\r\n        }\r\n\r\n    },\r\n\r\n})\r\n\r\nexport const {\r\n    inputValueAssignment,\r\n    addOperator,\r\n    calculateResult,\r\n    resetOperation,\r\n    addDot,\r\n    removeNumber,\r\n    addNumber,\r\n} =\r\n    calculationSlice.actions;\r\nexport default calculationSlice.reducer;\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const StyledNumButton = styled.button`\r\n  background: ${({theme}) => theme.numButtonBackground};\r\n  border: none;\r\n  cursor: pointer;\r\n  color: ${({theme}) => theme.fontColor};\r\n  box-shadow: 0 3px ${({theme}) => theme.numButtonShadow};\r\n  font-weight: 700;\r\n  grid-area: ${({area}) => area};\r\n\r\n\r\n}`","import {useDispatch} from \"react-redux\";\r\nimport {addNumber} from '../../../redux/slices/calculationSlice'\r\nimport {StyledNumButton} from \"../../../styles/StyledNumButton\";\r\n\r\nexport const NumberButton = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n        <StyledNumButton area={props.area}\r\n                         onClick={() => dispatch(addNumber(props.number))}>{props.number}</StyledNumButton>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const StyledClearButton = styled.button`\r\n  cursor:pointer;\r\n color: ${({theme}) => theme.clearButtonFontColor};\r\n  background: ${({theme}) => theme.clearButtonBackground};\r\n  box-shadow: 0 3px ${({theme}) => theme.clearButtonShadow};\r\n  grid-area: ${({area}) => area};\r\n  \r\n`","import {useDispatch} from \"react-redux\";\r\nimport {removeNumber} from '../../../redux/slices/calculationSlice'\r\nimport {StyledClearButton} from \"../../../styles/StyledClearButton\";\r\n\r\nexport const DEL = () => {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n        <StyledClearButton area={'DEL'} onClick={() => dispatch(removeNumber())}>DEL</StyledClearButton>\r\n    )\r\n}","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst {firstTheme, secondTheme, thirdTheme} = require('../../data/theme');\r\n\r\n\r\nconst localData = {...JSON.parse(localStorage.getItem('theme'))};\r\n\r\n\r\nconst initialState = localData.themeName ? localData : {...firstTheme};\r\n\r\n\r\nexport const themeSlice = createSlice({\r\n    name: \"themeSlice\",\r\n    initialState,\r\n    reducers: {\r\n        setTheme(state, action) {\r\n\r\n\r\n            switch (action.payload) {\r\n                case 'firstTheme':\r\n                    return {...firstTheme};\r\n                case 'secondTheme':\r\n                    return {...secondTheme}\r\n                case 'thirdTheme':\r\n                    return {...thirdTheme}\r\n                default:\r\n                    return {...state}\r\n            }\r\n        }\r\n\r\n    },\r\n});\r\n\r\nexport const {setTheme} = themeSlice.actions;\r\nexport default themeSlice.reducer;\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport calculationReducer from \"./slices/calculationSlice\";\r\nimport themeReducer from './slices/themeSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        calculator: calculationReducer,\r\n        theme: themeReducer,\r\n    },\r\n})","import {addDot, addOperator, calculateResult, removeNumber} from \"../redux/slices/calculationSlice\";\r\nimport {store} from \"../redux/store\";\r\n\r\n\r\nexport function updateInput(currentInput, symbol, operator) {\r\n\r\n\r\n    const dispatch = (action) => {\r\n        store.dispatch(action)\r\n    }\r\n\r\n    let localSymbol = symbol;\r\n    if (symbol === 'Enter') {\r\n        localSymbol = \"=\"\r\n    } else if (symbol === 'Backspace') {\r\n        return dispatch(removeNumber())\r\n    }\r\n\r\n\r\n    if (localSymbol === '.') {\r\n        return dispatch(addDot());\r\n    } else {\r\n\r\n        dispatch(addOperator(localSymbol));\r\n\r\n        if (localSymbol === '=') {\r\n            if (operator && currentInput) {\r\n                dispatch(calculateResult(currentInput))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const StyledCalculationButton = styled.button`\r\n  background: ${({symbol, theme}) => symbol === '=' ? theme.equalButtonBackground : theme.keyBackground};\r\n  color: ${({symbol, theme}) => symbol === '=' ? theme.equalButtonFontColor : theme.fontColor};\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  box-shadow: 0 3px ${({symbol, theme}) => symbol === '=' ? theme.equalButtonShadow : theme.numButtonShadow};\r\n  grid-area: ${({area}) => area};\r\n  \r\n}`","import {useSelector} from \"react-redux\";\r\nimport {updateInput} from \"../../../utils/updateInput\";\r\nimport {StyledCalculationButton} from \"../../../styles/StyledCalculationButton\";\r\n\r\nexport const CalculationButton = (props) => {\r\n    const {symbol, area} = props;\r\n    const {operator, input} = useSelector((state => state.calculator));\r\n\r\n    return (\r\n        <StyledCalculationButton area={area} symbol={symbol}\r\n                                 onClick={() => updateInput(input, symbol, operator)}>{symbol}</StyledCalculationButton>\r\n    )\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {resetOperation} from '../../../redux/slices/calculationSlice'\r\nimport {StyledClearButton} from \"../../../styles/StyledClearButton\";\r\n\r\nexport const Reset = () => {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n        <StyledClearButton area={'Reset'} onClick={() => dispatch(resetOperation())}>Reset</StyledClearButton>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StyledKeyboard = styled.div`\r\n  padding: 24px;\r\n  border-radius: 12px;\r\n  margin-top: 32px;\r\n  display: grid;\r\n  grid-template-rows: repeat(5, minmax(36px, auto));\r\n  grid-template-columns: repeat(4, minmax(84px, auto));\r\n  gap: 16px;\r\n  background: ${({theme}) => theme.keyboardBackground};\r\n  grid-template-areas: \"seven eight nine DEL\" \"four five six plus\" \"one two three minus\" \"dot zero divide multiply\" \"Reset Reset equal equal\";\r\n\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 1rem;\r\n    grid-template-rows: repeat(5, minmax(18px, auto));\r\n    grid-template-columns: repeat(4, minmax(32px, auto));\r\n\r\n  }\r\n  \r\n\r\n\r\n`\r\n\r\n","import {NumberButton} from \"./buttons/NumberButton\";\r\nimport {DEL} from \"./buttons/DEL\";\r\nimport {CalculationButton} from \"./buttons/CalculationButton\";\r\nimport {Reset} from \"./buttons/Reset\";\r\nimport {StyledKeyboard} from \"../../styles/StyledKeyboard\";\r\nimport {NUMBERS, OPERATION_SYMBOLS} from \"../../data/symbols\";\r\n\r\n\r\nexport const Keyboard = () => {\r\n\r\n    return (\r\n        <StyledKeyboard>\r\n            {\r\n                NUMBERS.map(({num, gridArea}) => <NumberButton number={num} area={gridArea} key={gridArea}/>)\r\n            }\r\n            <DEL/>\r\n            {OPERATION_SYMBOLS.map(({mathAction, gridArea}) => <CalculationButton symbol={mathAction} area={gridArea}\r\n                                                                                  key={gridArea}/>)}\r\n            <Reset/>\r\n        </StyledKeyboard>\r\n    )\r\n\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const StyledCalculator = styled.div`\r\n\r\n  margin: 0 auto;\r\n  height: 100vh;\r\n\r\n  padding: 2rem 0 0 0;\r\n  width: 90%;\r\n  max-width: 450px;\r\n\r\n\r\n  background: ${({theme}) => theme.mainBackground};\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 1rem;\r\n    width: 100%;\r\n  }\r\n\r\n\r\n`","import styled from \"styled-components\";\r\n\r\n\r\nexport const StyledCalcWindow = styled.div`\r\n  text-align: right;\r\n  background: ${({theme}) => theme.windowBackground};\r\n  border-radius: 12px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 124px;\r\n  padding-right: 16px;\r\n  width: 100%;\r\n  color: ${({theme}) => theme.resultFontColor};\r\n\r\n  & p {\r\n    display: block;\r\n    width: 100%;\r\n    height: 16px;\r\n  }\r\n}`","import {useSelector} from \"react-redux\";\r\nimport {StyledCalcWindow} from \"../../styles/StyledCalcWindow\";\r\n\r\nexport const CalcWindow = () => {\r\n\r\n    const {firstNumber, operator, secondNumber, result, input} = useSelector((state => state.calculator));\r\n\r\n    let activeInputView;\r\n    let equalSignVisible;\r\n\r\n\r\n    if (result) {\r\n        equalSignVisible = <span>=</span>;\r\n        activeInputView = <span>{result}</span>;\r\n    } else {\r\n        equalSignVisible = null;\r\n        activeInputView = <span>{input}</span>;\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <StyledCalcWindow>\r\n            <p>{firstNumber} {operator} {secondNumber} {equalSignVisible}</p>\r\n            <p> {activeInputView}</p>\r\n\r\n        </StyledCalcWindow>\r\n\r\n\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StyledCalcHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-right: 12px;\r\n  background: ${({theme}) => theme.mainBackground};\r\n  color: ${({theme}) => theme.headerFontColor};\r\n}\r\n`","import styled from \"styled-components\";\r\n\r\n\r\nexport const StyledSwitchToggle = styled.div`/* The container */\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  grid-template-rows: repeat(2, 20px);\r\n  margin: 0;\r\n  padding: 0;\r\n  justify-items: center;\r\n  align-items: center;\r\n\r\n  grid-template-areas: \r\n    \" . . . firstOption secondOption thirdOption\"\r\n    \"themeSign themeSign themeSign switchbox switchbox switchbox\";\r\n\r\n  h2 {\r\n    grid-area: themeSign;\r\n    padding-right: 3px;\r\n  }\r\n\r\n  span {\r\n    justify-self: center;\r\n  }\r\n\r\n  span.firstOption {\r\n    grid-area: firstOption;\r\n\r\n  }\r\n\r\n  span.secondOption {\r\n    grid-area: secondOption;\r\n  }\r\n\r\n  span.thirdOption {\r\n    grid-area: thirdOption;\r\n  }\r\n\r\n\r\n  .switchBox {\r\n    background: ${({theme}) => theme.windowBackground};\r\n    grid-area: switchbox;\r\n    height: 22px;\r\n    border-radius: 18px;\r\n    display: flex;\r\n  }\r\n\r\n\r\n  label.container {\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    input {\r\n      cursor: pointer;\r\n      opacity: 0;\r\n    }\r\n\r\n    .checkmark {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      height: 12px;\r\n      width: 12px;\r\n      border-radius: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n\r\n    input:checked ~ .checkmark {\r\n      background-color: ${({theme}) => theme.equalButtonBackground};\r\n    }\r\n\r\n  }\r\n\r\n`","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {setTheme} from \"../../redux/slices/themeSlice\";\r\nimport {StyledSwitchToggle} from \"../../styles/StyledSwitchToggle\";\r\n\r\nexport const SwitchToggle = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setThemeFunction = (theme) => dispatch(setTheme(theme));\r\n    const activeStatus = useSelector((state => state.theme.themeName));\r\n\r\n\r\n    return (\r\n\r\n        <StyledSwitchToggle>\r\n            <h2>theme</h2>\r\n            <span className=\"firstOption\">1</span>\r\n            <span className=\"secondOption\">2</span>\r\n            <span className=\"thirdOption\">3</span>\r\n            <div className='switchBox'>\r\n\r\n                <label className='container first' htmlFor='firstTheme'>\r\n                    <input id='firstTheme' type=\"checkbox\" checked={activeStatus === \"firstTheme\" ?? false}\r\n                           onChange={() => setThemeFunction('firstTheme')}/>\r\n                    <span className=\"checkmark\"></span>\r\n                </label>\r\n\r\n\r\n                <label className='container second' htmlFor='secondTheme'>\r\n                    <input id='secondTheme' type=\"checkbox\" checked={activeStatus === \"secondTheme\" ?? false}\r\n                           onChange={() => setThemeFunction('secondTheme')}/>\r\n                    <span className=\"checkmark\"></span>\r\n                </label>\r\n\r\n                <label className='container third' htmlFor='thirdTheme'>\r\n                    <input id='thirdTheme' type=\"checkbox\" checked={activeStatus === \"thirdTheme\" ?? false}\r\n                           onChange={() => setThemeFunction('thirdTheme')}/>\r\n                    <span className=\"checkmark\"></span>\r\n                </label>\r\n\r\n            </div>\r\n        </StyledSwitchToggle>\r\n    )\r\n};","import {StyledCalcHeader} from \"../../styles/StyledCalcHeader\";\r\nimport {SwitchToggle} from \"./SwitchToggle\";\r\n\r\n\r\nexport const CalcHeader = () => {\r\n\r\n    return (\r\n        <StyledCalcHeader>\r\n            <p>calc</p>\r\n            <SwitchToggle/>\r\n        </StyledCalcHeader>\r\n    )\r\n}\r\n","import {Keyboard} from \"./calculator elements/Keyboard\";\r\nimport {StyledCalculator} from \"../styles/StyledCalculator\";\r\nimport {CalcWindow} from \"./calculator elements/CalcWindow\";\r\nimport {CalcHeader} from \"./calculator elements/CalcHeader\";\r\n\r\nexport const Calculator = () => {\r\n\r\n\r\n    return (\r\n        <StyledCalculator>\r\n\r\n            <CalcHeader/>\r\n            <CalcWindow/>\r\n            <Keyboard/>\r\n\r\n        </StyledCalculator>\r\n\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  text-align: center;\r\n  min-height: 580px;\r\n  background: ${({theme}) => theme.mainBackground};\r\n\r\n`","// globalStyles.js\r\nimport {createGlobalStyle} from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: Spartan, Open-Sans, Helvetica, Sans-Serif, sans-serif;\r\n    font-weight: 700;\r\n\r\n\r\n    & button {\r\n      font-size: 32px;\r\n      font-weight: 700;\r\n      border-radius: 8px;\r\n      border: none;\r\n      height: 2.5rem;\r\n\r\n      @media (max-width: 768px) {\r\n        font-size: 24px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {Calculator} from \"./components/Calculator\";\nimport {Wrapper} from \"./styles/Wrapper\";\nimport {GlobalStyle} from \"./styles/GlobalStyle\";\nimport {useEffect} from \"react\";\nimport {NUMBERS, OPERATION_SYMBOLS} from \"./data/symbols\";\nimport {addNumber} from \"./redux/slices/calculationSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {ThemeProvider} from \"styled-components\";\nimport {updateInput} from \"./utils/updateInput\";\n\nfunction App() {\n\n    const dispatch = useDispatch();\n    // const inputValue = useSelector((state => state.inputValue.value));\n    const {operator, input} = useSelector((state => state.calculator));\n    const theme = useSelector((state => state.theme));\n\n    const handleKeyDown = (e) => {\n        const numberSymbols = NUMBERS.map(({num}) => num);\n        const operationSymbols = OPERATION_SYMBOLS.map(({mathAction}) => mathAction);\n\n        if (numberSymbols.includes(e.key)) {\n\n            dispatch(addNumber(e.key))\n        } else if (operationSymbols.includes(e.key) || e.key === \"Enter\" || 'Backspace') {\n            updateInput(input, e.key, operator)\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        // cleanup this component\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    });\n\n    useEffect(() => {\n        localStorage.setItem(\"theme\", JSON.stringify(theme));\n    }, [theme]);\n\n\n    return (\n        <div className=\"App\">\n\n            <ThemeProvider theme={theme}>\n                <GlobalStyle/>\n                <Wrapper>\n                    <Calculator/>\n                </Wrapper>\n            </ThemeProvider>\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const NUMBERS = [{num: '0', gridArea: 'zero'},\r\n    {num: '1', gridArea: 'one'},\r\n    {num: '2', gridArea: 'two'},\r\n    {num: '3', gridArea: 'three'},\r\n    {num: '4', gridArea: 'four'},\r\n    {num: '5', gridArea: 'five'},\r\n    {num: '6', gridArea: 'six'},\r\n    {num: '7', gridArea: 'seven'},\r\n    {num: '8', gridArea: 'eight'},\r\n    {num: '9', gridArea: 'nine'},]\r\n\r\n\r\nconst OPERATION_SYMBOLS = [\r\n    {\r\n        mathAction: '*',\r\n        gridArea: 'multiply',\r\n    },\r\n    {\r\n        mathAction: '/',\r\n        gridArea: 'divide',\r\n    },\r\n    {\r\n        mathAction: '+',\r\n        gridArea: 'plus'\r\n    },\r\n    {\r\n        mathAction: '-',\r\n        gridArea: 'minus'\r\n    },\r\n    {\r\n        mathAction: '=',\r\n        gridArea: 'equal'\r\n    },\r\n    {\r\n        mathAction: '.',\r\n        gridArea: 'dot'\r\n    }\r\n];\r\n\r\nmodule.exports = {\r\n    NUMBERS, OPERATION_SYMBOLS\r\n}"],"sourceRoot":""}